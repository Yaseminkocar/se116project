Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.*;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        String input = null;\r\n        try {\r\n            input = ReadTask(\"WrongFile.txt\");\r\n            String result = Rename(input);\r\n            System.out.println(\"Modified task statement: \" + result);\r\n        } catch (IOException e) {\r\n            System.out.println(\"Invalid tasktypeID \" + e.getMessage());\r\n        } catch (IllegalArgumentException e) {\r\n            System.out.println(\"Error: \" + e.getMessage());\r\n        }\r\n        String filePath = \"WrongFile.txt\";\r\n\r\n        try (BufferedReader bufferReader = new BufferedReader(new FileReader(filePath))) {\r\n            String line;\r\n            while ((line = bufferReader.readLine()) != null) {\r\n                String[] words = line.split(\"\\s+\");\r\n                for (String word : words) {\r\n                    System.out.println(word);\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        //Number of parentheses comparison\r\n        int sumOpen = 0;\r\n        int sumClose = 0;\r\n        for (int i = 0; i < input.length(); i++) {\r\n\r\n            if (input.charAt(i) == '(') {\r\n                sumOpen++;\r\n            } else if (input.charAt(i) == ')') {\r\n                sumClose++;\r\n            }\r\n        }\r\n        System.out.println();\r\n        //d3\r\n        Control();\r\n\r\n        try {\r\n            if (sumOpen < sumClose) {\r\n                throw new Exception(\"Error: Missing '('\");\r\n\r\n            } else if (sumClose < sumOpen) {\r\n                throw new Exception(\"Error: Missing ')'\");\r\n            }\r\n        } catch (Exception e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        System.out.println();\r\n\r\n        //Checking whether tasks are on the station or not\r\n        String line2;\r\n        ArrayList tasksOfJob= new ArrayList();\r\n        int startLineNumber=0;\r\n        int endLineNumber=0;\r\n        try {\r\n            BufferedReader bufferedReader = new BufferedReader(new FileReader(filePath));\r\n            while ((line2 = bufferedReader.readLine()) != null) {\r\n                String[] words = line2.split(\"\\s+\");\r\n                for(int i=0;i<words.length;i++){\r\n                    if(words[i].equals(\"(JOBTYPES\")){\r\n                        startLineNumber=i;\r\n                    }\r\n                }\r\n                for(int j=0;j<words.length;j++){\r\n                    if(words[j].equals(\"(STATIONS\")){\r\n                        endLineNumber=j;\r\n                    }\r\n                }\r\n                for(int k=startLineNumber;k<endLineNumber;k++){\r\n                    if(words[k].startsWith(\"T\")) {\r\n                        tasksOfJob.add(words[k]);\r\n                    }\r\n                }\r\n                ArrayList taskOfStation= new ArrayList();\r\n                for(int a=endLineNumber;a<words.length;a++){\r\n                    if(words[a].startsWith(\"T\")) {\r\n                        taskOfStation.add(words[a]);\r\n                    }\r\n                }\r\n                int b=taskOfStation.size();\r\n                int c=tasksOfJob.size();\r\n                for(int i=0;i<b;i++){\r\n                    for(int j=0;j<c;j++){\r\n                        if(taskOfStation.get(i)!=tasksOfJob.get(j)){\r\n                            throw new Exception(\"Task\"+i +\"is not executed at any station\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }catch(Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        String fileName = \"WrongFile.txt\";\r\n        List<Job> jobs = readJobs(fileName);\r\n\r\n        // Print all jobs\r\n        for (Job job : jobs) {\r\n            System.out.println(job);\r\n        }\r\n\r\n        System.out.println();\r\n        try {\r\n            JobErrors parser = new JobErrors();\r\n            List<Job> job = parser.parseJobFile(\"jobfile.txt\");\r\n            //  JobTracker tracker = new JobTracker(jobs);\r\n\r\n        /*    for (int time = 0; time <= 50; time += 1) {\r\n                System.out.println(\"Tracking jobs at time: \" + time);\r\n                tracker.trackJobStates(time);\r\n                System.out.println();\r\n            } */\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        System.out.println();\r\n    }\r\n    //d3\r\n    private static void Control() {\r\n        StringBuilder stringBuilder = new StringBuilder();\r\n\r\n        try (BufferedReader br = new BufferedReader(new FileReader(\"WrongFile.txt\"))) {\r\n            String line;\r\n            while ((line = br.readLine()) != null) {\r\n                stringBuilder.append(line).append(\"\\n\");\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        if (stringBuilder.length() > 0) {\r\n            stringBuilder.setLength(stringBuilder.length() - 1);\r\n        }\r\n\r\n        String element = stringBuilder.toString();\r\n\r\n        String[] lines = element.split(\"\\n\");\r\n        List<String> inputList = new ArrayList<>();\r\n\r\n        for (String line : lines) {\r\n            String[] words = line.trim().split(\"\\\\s+\");\r\n            for (String word : words) {\r\n                inputList.add(word.replaceAll(\"[()]\", \"\"));\r\n            }\r\n        }\r\n\r\n        String[] wordsArray = inputList.toArray(new String[0]);\r\n        for (int i=0; i< wordsArray.length; i++){\r\n            System.out.println(wordsArray[i]);\r\n        }\r\n        int jobTypesIndex = 0;\r\n        int stationsIndex = 0;\r\n\r\n        for (int j =0; j < wordsArray.length; j++) {\r\n            if (wordsArray[j].equals(\"JOBTYPES\")) {\r\n                jobTypesIndex = j;\r\n            }\r\n        }\r\n        for (int k = 0; k < wordsArray.length; k++) {\r\n            if (wordsArray[k].equals(\"STATIONS\")) {\r\n                stationsIndex = k;\r\n            }\r\n        }\r\n\r\n        System.out.println(jobTypesIndex);\r\n        System.out.println(stationsIndex);\r\n\r\n        List<String> taskTypes = new ArrayList<>();\r\n        List<Double> defaultSizes = new ArrayList<>();\r\n        List<String> declaredTaskTypes = new ArrayList<>();\r\n        List<String> duplicateTaskTypes = new ArrayList<>();\r\n        List<String> invalidTaskTypes = new ArrayList<>();\r\n        List<String> negativeSizeTasks = new ArrayList<>();\r\n\r\n        // Extracting T elements and default sizes\r\n        for (int i = 0; i < jobTypesIndex; i++) {\r\n            String word = wordsArray[i];\r\n            if (word.startsWith(\"T\")) {\r\n                if (declaredTaskTypes.contains(word)) {\r\n                    duplicateTaskTypes.add(word);\r\n                } else {\r\n                    declaredTaskTypes.add(word);\r\n                    taskTypes.add(word);\r\n                    try {\r\n                        double size = Double.parseDouble(wordsArray[i + 1]);\r\n                        if (size < 0) {\r\n                            negativeSizeTasks.add(word);\r\n                        }\r\n                        defaultSizes.add(size);\r\n                        i++;\r\n                    } catch (NumberFormatException e) {\r\n                        defaultSizes.add(null); // No default size\r\n                    }\r\n                }\r\n            } else if (!word.matches(\"[0-9]+\") && !word.equals(\"TASKTYPES\")) {\r\n                invalidTaskTypes.add(word);\r\n            }\r\n        }\r\n\r\n        List<String> declaredJobTypes = new ArrayList<>();\r\n        List<String> jobsWithNegativeSize = new ArrayList<>();\r\n        List<String> undeclaredTaskTypes = new ArrayList<>();\r\n        System.out.println();\r\n\r\n        for (int i = jobTypesIndex + 1; i < stationsIndex; i++) {\r\n            String word = wordsArray[i];\r\n            if (word.startsWith(\"J\")) {\r\n                if (declaredJobTypes.contains(word)) {\r\n                    System.out.println(\"Error: Job type \" + word + \" already declared.\");\r\n                } else {\r\n                    declaredJobTypes.add(word);\r\n                }\r\n            } else if (word.startsWith(\"T\")) {\r\n                if (!taskTypes.contains(word)) {\r\n                    undeclaredTaskTypes.add(word);\r\n                    System.out.println(\"Error: Task type \" + word + \" not declared in TASKTYPES.\");\r\n                }\r\n                try {\r\n                    double size = Double.parseDouble(wordsArray[i + 1]);\r\n                    if (size < 0) {\r\n                        System.out.println(\"Error: Negative size for task type \" + word + \" in job type \" + wordsArray[i - 1]);\r\n                        jobsWithNegativeSize.add(wordsArray[i - 1]);\r\n                    }\r\n                    i++;\r\n                } catch (NumberFormatException e) {\r\n                    int tIndex = taskTypes.indexOf(word);\r\n                    if (tIndex >= 0 && defaultSizes.get(tIndex) == null) {\r\n                        System.out.println(\"Error: Task type \" + word + \" has no default size.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        List<String> stationTasks = new ArrayList<>();\r\n        for (int i = stationsIndex + 1; i < wordsArray.length; i++) {\r\n            String word = wordsArray[i];\r\n            if (word.startsWith(\"T\")) {\r\n                stationTasks.add(word);\r\n            }\r\n        }\r\n        for (int i =0; i< taskTypes.size(); i++){\r\n            if (!stationTasks.contains(taskTypes.get(i))) {\r\n                System.out.println(\"Error: Task type \" + taskTypes.get(i) + \" is not executed in any station.\");\r\n            }\r\n        }\r\n        int openParenthesisCount = 0;\r\n        int closeParenthesisCount = 0;\r\n        for (int i =0; i<wordsArray.length; i++){\r\n            if(wordsArray[i].contains(\"(\")){\r\n                openParenthesisCount++;\r\n            } if (wordsArray[i].contains(\")\")) {\r\n                closeParenthesisCount++;\r\n            }\r\n        }\r\n        if (openParenthesisCount != closeParenthesisCount) {\r\n            System.out.println(\"Error: Unmatched parentheses found.\");\r\n        }\r\n\r\n        for (int m =0; m<duplicateTaskTypes.size(); m++) {\r\n            System.out.println(\"Error: Duplicate task type \" + duplicateTaskTypes.get(m) + \" found.\");\r\n        }\r\n\r\n        for (int k =0; k<invalidTaskTypes.size(); k++) {\r\n            System.out.println(\"Error: Invalid task type ID \" + invalidTaskTypes.get(k));\r\n        }\r\n\r\n        for (int l =0; l<negativeSizeTasks.size(); l++){\r\n            System.out.println(\"Error: Negative default size for task type \" + negativeSizeTasks.get(l));\r\n        }\r\n    }\r\n\r\n    public static String ReadTask(String inputfile) throws IOException {\r\n        StringBuilder stringBuilder = new StringBuilder();\r\n        try (BufferedReader reader = new BufferedReader(new FileReader(inputfile))) {\r\n            String line;\r\n            while ((line = reader.readLine()) != null) {\r\n                stringBuilder.append(line).append(\"\\n\"); // Append each line with a new line character\r\n            }\r\n        }\r\n        return stringBuilder.toString();\r\n    }\r\n\r\n    public static String Rename(String input) {\r\n        if (Character.isDigit(input.charAt(0))) {\r\n            throw new IllegalArgumentException(\"Task statement cannot start with a number!\");\r\n        }\r\n        return input;\r\n    }\r\n    // Method to read jobs from file\r\n    public static List<Job> readJobs(String fileName) {\r\n        List<Job> jobs = new ArrayList<>();\r\n\r\n        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {\r\n            String line;\r\n            while ((line = br.readLine()) != null) {\r\n                parseJobLine(line, jobs);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return jobs;\r\n    }\r\n\r\n    // Method to parse each line and add to jobs list\r\n    private static void parseJobLine(String line, List<Job> jobs) {\r\n        // Remove parentheses and split by spaces\r\n        line = line.replaceAll(\"[()]\", \"\").trim();\r\n        String[] parts = line.split(\"\\\\s+\");\r\n\r\n        if (parts.length > 0) {\r\n            String jobName = parts[0];\r\n            ArrayList<JobDetail> details = new ArrayList<>();\r\n            for (int i = 1; i < parts.length; i += 2) {\r\n                String type = parts[i];\r\n                int value = (i + 1 < parts.length && isNumeric(parts[i + 1])) ? Integer.parseInt(parts[i + 1]) : 0;\r\n                details.add(new JobDetail(type, value));\r\n            }\r\n            jobs.add(new Job(jobName, details));\r\n        }\r\n    }\r\n\r\n    // Method to check if a string is numeric\r\n    private static boolean isNumeric(String str\r\n    ) {\r\n        try {\r\n            Integer.parseInt(str);\r\n            return true;\r\n        } catch (NumberFormatException e) {\r\n            return false;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 62cf14466a51ab5bd0a2f26d9041fe6274253177)
+++ b/src/Main.java	(date 1716115246872)
@@ -175,8 +175,8 @@
             }
         }
 
-        System.out.println(jobTypesIndex);
-        System.out.println(stationsIndex);
+        System.out.println("Line number of where 'JobTypes' is "+jobTypesIndex);
+        System.out.println("Line number of where 'Station' is "+stationsIndex);
 
         List<String> taskTypes = new ArrayList<>();
         List<Double> defaultSizes = new ArrayList<>();
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 62cf14466a51ab5bd0a2f26d9041fe6274253177)
+++ b/.idea/misc.xml	(date 1716114772918)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="20" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="20" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"c6b30def-f593-410b-8ca6-fc914bf6677d\" name=\"Changes\" comment=\"changes\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/JobScheduler.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Scheduler.java\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;EmirayDurmaz&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Yaseminkocar/se116project.git&quot;,\r\n    &quot;accountId&quot;: &quot;f876dfee-e282-4bb3-ac51-b7a06d3e1894&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;customColor&quot;: &quot;&quot;,\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2flxulGE1TD1wiPGhb4j94xWvUK\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"flattenPackages\" value=\"true\" />\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"showMembers\" value=\"true\" />\r\n    <option name=\"showVisibilityIcons\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Job_Req5\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Job_Req5\" />\r\n      <module name=\"asdfgh\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"asdfgh\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Station_Req7\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Station_Req7\" />\r\n      <module name=\"asdfgh\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WorkFlowParser\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"WorkFlowParser\" />\r\n      <module name=\"asdfgh\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"d1\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"d1\" />\r\n      <module name=\"asdfgh\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Station_Req7\" />\r\n        <item itemvalue=\"Application.d1\" />\r\n        <item itemvalue=\"Application.Job_Req5\" />\r\n        <item itemvalue=\"Application.WorkFlowParser\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"c6b30def-f593-410b-8ca6-fc914bf6677d\" name=\"Changes\" comment=\"\" />\r\n      <created>1714389694199</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1714389694199</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"commit\">\r\n      <created>1714390906500</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714390906500</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"meltemin commiti\">\r\n      <created>1714461371483</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714461371483</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"meltemin commiti 2\">\r\n      <created>1714461447617</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714461447617</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Classes\">\r\n      <created>1714565742088</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1714565742088</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"some bugs fixed\">\r\n      <created>1715370784472</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715370784472</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715885718441</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715885718441</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"changes\">\r\n      <created>1715937727609</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715937727609</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"senkronize\">\r\n      <created>1715941589521</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715941589521</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"commit repeat 2\">\r\n      <created>1715953732287</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715953732287</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Exception addition\">\r\n      <created>1715953869614</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715953869614</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"commit\">\r\n      <created>1715963243663</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715963243663</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"hash and arraylist tries\">\r\n      <created>1715965005880</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715965005880</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"changes\">\r\n      <created>1716029189997</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716029189998</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"easy to read\">\r\n      <created>1716029847342</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716029847342</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"changes\">\r\n      <created>1716043455622</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716043455623</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"changes\">\r\n      <created>1716043464287</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716043464288</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"17\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"meltemin commiti\" />\r\n    <MESSAGE value=\"meltemin commiti 2\" />\r\n    <MESSAGE value=\"Classes\" />\r\n    <MESSAGE value=\"some bugs fixed\" />\r\n    <MESSAGE value=\"senkronize\" />\r\n    <MESSAGE value=\"commit repeat 2\" />\r\n    <MESSAGE value=\"Exception addition\" />\r\n    <MESSAGE value=\"commit\" />\r\n    <MESSAGE value=\"hash and arraylist tries\" />\r\n    <MESSAGE value=\"easy to read\" />\r\n    <MESSAGE value=\"changes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"changes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 62cf14466a51ab5bd0a2f26d9041fe6274253177)
+++ b/.idea/workspace.xml	(date 1716114856527)
@@ -6,9 +6,8 @@
   <component name="ChangeListManager">
     <list default="true" id="c6b30def-f593-410b-8ca6-fc914bf6677d" name="Changes" comment="changes">
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_05_2024_23_26__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_05_2024_23_26__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/JobScheduler.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Scheduler.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
